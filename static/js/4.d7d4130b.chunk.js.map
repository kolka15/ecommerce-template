{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.js","components/sign-in/sign-in.js","components/sign-up/sign-up.js","pages/sign-in-and-sign-up/sign-in-and-sign-up.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","FormInput","_ref","handleChange","label","otherProps","objectWithoutProperties","react_default","a","createElement","className","assign","onChange","concat","connect","dispatch","googleSignInStart","emailSignInStart","email","password","_useState2","useState","userCredentials","setCredentials","handleSubmit","_ref2","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","preventDefault","stop","_x","apply","this","arguments","_event$target","target","name","_objectSpread","defineProperty","Fragment","onSubmit","form_input_form_input","type","required","custom_button","onClick","_this","setState","isGoogleSignIn","state","currentUser","user","error","signUpStart","displayName","confirmPassword","setUserCredentials","alert","abrupt","sign_up_objectSpread","message","SignInAndSignUpPage","sign_in_sign_in","sign_up_sign_up"],"mappings":"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","file":"static/js/4.d7d4130b.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react';\n\nimport './form-input.scss';\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n    <div className='group'>\n        <input className='form-input' onChange={handleChange} {...otherProps} />\n        {label ? (\n            <label\n                className={`${\n                    otherProps.value.length ? 'shrink' : ''\n                } form-input-label`}\n            >\n                {label}\n            </label>\n        ) : null}\n    </div>\n);\n\nexport default FormInput;\n","import React, {useState} from 'react';\n\nimport './sign-in.scss';\n\nimport FormInput from '../form-input/form-input';\nimport CustomButton from \"../custom-button/custom-button\"\nimport {connect} from \"react-redux\"\nimport {googleSignInStart, emailSignInStart} from \"../../redux/user/user.actions\"\n\n\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\n\n    const [userCredentials, setCredentials] = useState({email: '', password: ''})\n    const {email, password} = userCredentials\n\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        emailSignInStart(email, password)\n\n    };\n\n    const handleChange = event => {\n        const {value, name} = event.target\n\n        setCredentials({...userCredentials, [name]: value})\n    };\n\n    const clearFormFields = () => (\n        this.setState({\n            email: '',\n            password: '',\n        })\n    )\n\n    return (\n        <>\n            <div className='sign-in'>\n                <h2 className='title'>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={handleSubmit}>\n                    <FormInput\n                        name='email'\n                        type='email'\n                        handleChange={handleChange}\n                        value={email}\n                        label='email'\n                        required\n                    />\n                    <FormInput\n                        name='password'\n                        type='password'\n                        value={password}\n                        handleChange={handleChange}\n                        label='password'\n                        required\n                    />\n                    <div className='buttons'>\n                        <CustomButton type='submit'> Sign in </CustomButton>\n                        <CustomButton onClick={() => {\n                            clearFormFields();\n                            googleSignInStart()\n                        }} isGoogleSignIn>\n                            Sign in with Google\n                        </CustomButton>\n                    </div>\n                </form>\n            </div>\n        </>\n    );\n\n}\n\n\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password})),\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn)","import React, {useState} from 'react';\nimport {connect} from \"react-redux\"\n\nimport './sign-up.scss'\nimport {signUpStart} from \"../../redux/user/user.actions\"\n\nimport FormInput from \"../form-input/form-input\"\nimport CustomButton from \"../custom-button/custom-button\"\n\nconst SignUp = ({signUpStart, error}) => {\n\n    const [userCredentials, setUserCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n    const {displayName, email, password, confirmPassword} = userCredentials\n\n    const handleSubmit = async event => {\n        event.preventDefault()\n\n        if (password !== confirmPassword) {\n            alert(`Passwords don't match`)\n            return\n        }\n\n        signUpStart({displayName, email, password})\n    }\n\n    const handleChange = event => {\n        const {name, value} = event.target\n\n        setUserCredentials({...userCredentials, [name]: value})\n    }\n\n    return (\n        <div className='sign-up'>\n            <h2 className='title'>I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    label='Display Name'\n                    required\n                />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    label='Email'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    label='Password'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label='Confirm Password'\n                    required\n                />\n                <div className='error'>\n                    {\n                        error\n                            ? error.message\n                            : ''\n\n                    }\n                </div>\n                <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form>\n        </div>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    currentUser: state.user.currentUser,\n    error: state.user.error\n\n})\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react';\nimport './sign-in-and-sign-up.scss';\nimport SignIn from \"../../components/sign-in/sign-in\"\nimport SignUp from \"../../components/sign-up/sign-up\"\n\nconst SignInAndSignUpPage = () => (\n    <div className='sign-in-and-sign-up'>\n        <SignIn/>\n        <SignUp/>\n    </div>\n);\n\nexport default SignInAndSignUpPage;"],"sourceRoot":""}