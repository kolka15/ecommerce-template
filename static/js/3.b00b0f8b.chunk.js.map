{"version":3,"sources":["components/collection-preview/collection-preview.js","components/collections-overview/collections-overview.js","components/collections-overview/collection-overview.container.js","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.js","components/collection-item/collection-item.js"],"names":["CollectionPreview","_ref","title","items","react_default","a","createElement","className","toUpperCase","filter","item","idx","map","collection_item","key","id","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","_ref2","otherCollectionProps","Object","objectWithoutProperties","collection_preview_collection_preview","assign","isLoading","selectIsCollectionFetching","CollectionsOverviewContainer","compose","WithSpinner","CollectionsOverview","__webpack_require__","d","__webpack_exports__","selectCollection","selectIsCollectionsLoaded","reselect__WEBPACK_IMPORTED_MODULE_0__","selectShop","state","shop","selectCollections","createSelector","keys","collectionUrlParam","isFetching","WrappedComponent","otherProps","_home_new_projects_tutorials_ecommerce_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","_spinner_spinner_component__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_custom_button_custom_button__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_3__","_redux_cart_cart_actions__WEBPACK_IMPORTED_MODULE_4__","dispatch","addItem","name","price","imageUrl","style","backgroundImage","concat","onClick","inverted"],"mappings":"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","file":"static/js/3.b00b0f8b.chunk.js","sourcesContent":["import React from \"react\"\nimport './collection-preview.scss'\nimport CollectionItem from \"../collection-item/collection-item\"\n\nconst CollectionPreview = ({title, items}) => (\n    <div className='collection-preview'>\n        <h1 className='title'>{title.toUpperCase()}</h1>\n        <div className='preview'>\n            {\n                items\n                    .filter((item, idx) => idx < 4)\n                    .map((item) => (\n                    <CollectionItem key={item.id} item={item}/>\n                ))\n            }\n        </div>\n    </div>\n)\n\nexport default CollectionPreview","import React from 'react';\nimport './collections-overview.scss'\nimport {connect} from 'react-redux'\nimport {createStructuredSelector} from \"reselect\"\nimport CollectionPreview from \"../collection-preview/collection-preview\"\nimport {selectCollectionsForPreview} from \"../../redux/shop/shop.selectors\"\n\nconst CollectionsOverview = ({collections}) => (\n    <div className='collections-overview'>\n        {\n            collections.map(({id, ...otherCollectionProps}) => (\n                <CollectionPreview key={id} {...otherCollectionProps}/>\n            ))\n        }\n    </div>\n)\n\nconst mapStateToProps = createStructuredSelector({\n    collections: selectCollectionsForPreview\n})\n\nexport default connect(mapStateToProps)(CollectionsOverview);","import {connect} from \"react-redux\"\nimport {createStructuredSelector} from \"reselect\"\nimport {compose} from \"redux\"\n\nimport {selectIsCollectionFetching} from \"../../redux/shop/shop.selectors\"\nimport WithSpinner from \"../with-spinner/with-spinner\"\nimport CollectionsOverview from './collections-overview'\n\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: selectIsCollectionFetching\n})\n\nconst CollectionsOverviewContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner\n)(CollectionsOverview)\n\nexport default CollectionsOverviewContainer","import {createSelector} from 'reselect'\n\nconst selectShop = state => state.shop/**/\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n)\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n)\n\nexport const selectCollection = collectionUrlParam =>\n    createSelector(\n        [selectCollections],\n        collections => collections ? collections[collectionUrlParam] : null\n    )\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n)","import React from 'react';\nimport Spinner from \"../spinner/spinner.component\"\n\nconst WithSpinner = WrappedComponent =>\n    ({isLoading, ...otherProps}) => {\n        return isLoading ? (\n            <Spinner/>\n        ) : (\n            <WrappedComponent {...otherProps}/>\n        )\n    }\n\n\nexport default WithSpinner;\n","import React from \"react\"\nimport './collection-item.scss'\nimport CustomButton from \"../custom-button/custom-button\"\nimport {connect} from 'react-redux'\nimport {addItem} from \"../../redux/cart/cart.actions\"\n\nconst CollectionItem = ({item, addItem}) => {\n    const {name, price, imageUrl} = item\n\n    return (\n        <div className='collection-item'>\n            <div\n                style={{backgroundImage: `url(\"${imageUrl}\")`}}\n                className='image'\n            />\n            <div className='collection-footer'>\n                <span className='name'>{name}</span>\n                <span className='price'>${price}</span>\n            </div>\n            <CustomButton onClick={() => addItem(item)} inverted>Add to cart</CustomButton>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    addItem: item => dispatch(addItem(item))\n})\n\nexport default connect(null, mapDispatchToProps)(CollectionItem)"],"sourceRoot":""}